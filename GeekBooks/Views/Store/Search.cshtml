@model GeekBooks.Models.SearchViewModel
@using GeekBooks.Helpers

@{
    ViewBag.Title = "Search";
}

<div class="container">
    <h2>@ViewBag.Message</h2>
    <div align ="right">Sort results by:
        <form method="post">
            <select id="sort" name="sort">
                <option value="title">Title</option>
                <option value="author">Author</option>
                <option value="price">Price</option>
                <option value="rating">Rating</option>
                <option value="release">Release date</option>
            </select>
            <input type="submit" value="Go">
        </form>
        <table class="table">
                @foreach (var item in Model.Items)
                {                
                    <tr>
                        <td>
                            @Html.ImageActionLink(" ", "ProductDetails", "Store", new { id = item.BookID }, null, item.CoverUrl)
                        </td>
                        <td>
                            <h3>@item.BookName</h3>
                            <h4>by @Html.ActionLink(item.Author.AuthorName, "Search", "Store", new { query = item.Author.AuthorName, type = 1 }, null)</h4>
                            <p>@item.Synopsis</p>
                            <h4>Price: $@item.Price</h4>
                            <div style="margin-top: 3px;">
                                @for (var i = 1; i <= 5; i++)
                                {
                                    if (i <= item.AvgRating)
                                    {
                                        <i style="color:darkorange" class="fa fa-star fa-2x"></i>
                                        if ((item.AvgRating - i) > 0 && (item.AvgRating - i) < 1)
                                        {
                                            <i style="color:darkorange" class="fa fa-star-half-full fa-2x"></i>
                                        }
                                    }

                                    if ((i > Math.Ceiling(item.AvgRating)) && (i <= 5))
                                    {
                                        <i style="color:darkorange" class="fa fa-star-o fa-2x"></i>
                                    }
                                }
                            </div>                                          
                        </td>
                    </tr>
                }        
        </table>
    </div>
    
    @if (Model.Pager.EndPage > 1)
            {
        <ul class="pagination" style="float: right">
            @if (Model.Pager.CurrentPage > 1)
            {
                <li>
                    <a href='@Url.Action("Search", "Store", new { query = Model.Query.query, type = Model.Query.type, itemCount = Model.ItemsPerPage})'>First</a>
                </li>
                        <li>
                            <a href='@Url.Action("Serach", "Store", new { query = Model.Query.query, type = Model.Query.type, itemCount = Model.ItemsPerPage, page = (Model.Pager.CurrentPage - 1)})'>Previous</a>
                        </li>
            }

            @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
            {
                <li class="@(page == Model.Pager.CurrentPage ? "active" : "")">
                    <a href='@Url.Action("Search", "Store", new { query = Model.Query.query, type = Model.Query.type, page = page, itemCount = Model.ItemsPerPage})'>@page</a>
                </li>}

            @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
            {
                <li>
                    <a href='@Url.Action("Search", "Store", new { query = Model.Query.query, type = Model.Query.type, page = (Model.Pager.CurrentPage + 1), itemCount = Model.ItemsPerPage})'>Next</a>
                </li>
                        <li>
                            <a href='@Url.Action("Search", "Store", new { query = Model.Query.query, type = Model.Query.type, page = (Model.Pager.TotalPages), itemCount = Model.ItemsPerPage})'>Last</a>
                        </li>
            }
        </ul>
    }
</div>