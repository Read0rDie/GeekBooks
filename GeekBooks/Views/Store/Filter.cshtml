@model FilterViewModel
@using GeekBooks.Helpers
@using GeekBooks.Models

<link rel="stylesheet" type="text/css" media="screen" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.9.3/css/bootstrap-select.min.css">

<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.9.3/js/bootstrap-select.min.js"></script>

<style>
    div.btn-group.bootstrap-select.col-md-12 {
        padding: 0;
        border-radius:0;
    }

    .btn {
        border-radius: 0;
        background-color: #D2D7D3;
        border-color: #D2D7D3;
        color: black;
    }

    .btn:hover {
        
        background-color: #aea79f;
        border-color: #aea79f;
        
    }

    a.filter{
        display:block;
        padding: 10px 30px;
        text-decoration:none;
        color:black;
    }

    a.filter.expand{
        color: #e95420;
    }

    a.filter:hover{
        background-color:#e95420;
        color:white;
    }

    a.appfilter {
        
        padding: 10px 0px;
        text-decoration: none;
        color: black;
        background-color: #D2D7D3;
    }

        a.appfilter:hover {
            background-color: #e95420;
            color: white;
        }

    .tag {
        background-color: #D2D7D3;
        margin-bottom: 10px;
    }

    .tag:hover {
        background-color: #aea79f;
        color: white;
    }

    .break {
        margin-top: 20px;
        text-align: center;
        color: #ECF0F1;
    }

    .csbutton.inactive {
        background-color: #BDC3C7;
        border: 2px solid #BDC3C7;
    }

    .csbutton.inactive:hover {
        background-color: #BDC3C7;
        color: white;            
    }

    
    
</style>

<div class="col-md-12" style="margin-top:40px">
    <div class="col-md-4">
        <div class="col-md-3"></div>
        <div class="col-md-7" style="margin:auto; padding:0;">
            <div class="col-md-12">
                <h5><b>Applied Filters</b></h5>
            </div>
            @{
                if(Model.Queries.Count == 0)
                {                    
                    <div class="col-md-12 break">
                        <p>______________________</p>
                    </div>
                }
            }
        
            @foreach (var item in Model.Queries)
            {
                List<Query> filter = Model.Queries.ToList();
                String fname = item.query;
                filter.Remove(item);
                String newQuery = "";
                int count = 1;
                foreach (var query in filter)
                {
                    if (count < filter.Count)
                    {
                        newQuery = newQuery + query.query + query.type + ",";
                    }
                    else
                    {
                        newQuery = newQuery + query.query + query.type;
                    }
                    count++;
                }
                <div class=" col-md-12 tag" style="padding: 0">
                    <a class ="appfilter" href='@Url.Action("Filter", "Store", new { queries = newQuery, sortS = Model.SortName, save = true, itemCount = Model.ItemsPerPage})'>
                        <div class="col-md-10">
                            <h5>@fname</h5>
                        </div>
                        <div class="col-md-2">
                            <h5>X</h5>
                        </div>
                    </a>

                    @*<div class="col-md-10" style="padding: 0 0 0 10px; margin-bottom: 10px; background-color:#D2D7D3">
                        <h5>@Html.ActionLink(fname, "Filter", "Store", new { queries = newQuery }, new { @class = "appfilter" })</h5>
                    </div>
                    <div class="col-md-2" style="padding: 0 10px 0 0; margin-bottom: 10px; background-color:#D2D7D3">
                        <h5>@Html.ActionLink("X", "Filter", "Store", new { queries = newQuery}, new { @class = "appfilter"})</h5>
                    </div>*@
                </div>
            }
            <div class="col-md-12" style="margin:0; padding:0">
                <h5 style="margin: 20px 0 10px 10px"><b>Sort results by:</b></h5>
                @{ 
                    String qString = "";
                    int qCount = 1;
                    foreach (var item in Model.Queries)
                    {
                        if (qCount < Model.Queries.Count)
                        {
                            qString = qString + item.query + item.type + ",";
                        }
                        else
                        {
                            qString = qString + item.query + item.type;
                        }
                        qCount++;
                    }
                }
                

                @using (Html.BeginForm("Filter", "Store", new { queries = qString, save = false, itemCount = Model.ItemsPerPage }, FormMethod.Post, null))
                {
                    <select id="sort" class="selectpicker col-md-12" style="width:100%; padding:0; margin:0" name="sort" onchange="this.form.submit();">
                        <option id="title" value="title">Title</option>
                        <option id="author" value="author">Author</option>
                        <option id="price" value="price">Price</option>
                        <option id="rating" value="rating">Rating</option>
                        <option id="release" value="release">Release date</option>
                    </select>
                }
                @*<form method="post">          
                    
                    <select id="sort" class="selectpicker col-md-12" style="width:100%; padding:0; margin:0" name="sort" onchange="this.form.submit();" >
                        <option id ="title" value="title">Title</option>
                        <option id ="author" value="author">Author</option>
                        <option id ="price" value="price">Price</option>
                        <option id ="rating" value="rating">Rating</option>
                        <option id ="release" value="release">Release date</option>
                    </select>                    
                </form>*@
            </div>

            <div class="col-md-12">
                <h5 style="margin-top:40px"><b>Choose Filters</b></h5>
            </div>
            @{
                <div class="col-md-12" style="margin:0; padding:0; background-color:#D2D7D3">
                    <h5 style="padding-left:20px; margin-top: 10px; margin-bottom: 10px"><b>Genre</b></h5>
                </div>
                    HashSet<String> categories = new HashSet<string>();
                foreach (var item in Model.FilterItems)
                {
                    foreach (var genre in item.Genre)
                    {
                        bool found = false;
                        foreach (var query in Model.Queries)
                        {
                            if (query.query == genre.GenreTitle)
                            {
                                found = true;
                            }
                        }

                        if (!found)
                        {
                            categories.Add(genre.GenreTitle);
                        }
                    }
                }
                if (categories.Count == 0)
                {
                    <div class="col-md-12 break">
                        <p>______________________</p>
                    </div>
                }
                if (categories.Count <= 5)
                {
                    foreach (var item in categories)
                    {
                        String newQuery = "";
                        foreach (var query in Model.Queries)
                        {
                            newQuery = newQuery + query.query + query.type + ",";
                        }
                        newQuery += item + "1";
                        <div class="col-md-12" style="padding:0">
                            <h5 style="margin:0; padding:0"><i>@Html.ActionLink(@item, "Filter", "Store", new { queries = newQuery, sortS = Model.SortName, save = true, itemCount = Model.ItemsPerPage }, new { @class = "filter"})</i></h5>
                        </div>
                    }
                }
                else
                {
                    <div id="complete" class="col-md-12" style="margin:0; padding:0; display:none">
                        @foreach (var item in categories)
                        {
                        String newQuery = "";
                        foreach (var query in Model.Queries)
                        {
                        newQuery = newQuery + query.query + query.type + ",";
                        }
                        newQuery += item + "1";
                        <div class="col-md-12" style="padding:0">
                            <h5 style="margin:0; padding:0"><i>@Html.ActionLink(@item, "Filter", "Store", new { queries = newQuery, sortS = Model.SortName, save = true, itemCount = Model.ItemsPerPage }, new { @class = "filter"})</i></h5>
                        </div>
                        }
                        <div class="col-md-12" style="padding: 0">
                            <a class="filter expand" href="#" id="less">less</a>
                        </div>
                    </div>
                    <div id="partial" class="col-md-12" style="margin:0; padding:0; display:contents">
                        @{
                            int inc = 0;
                            foreach (var item in categories)
                            {                                
                                String newQuery = "";
                                foreach (var query in Model.Queries)
                                {
                                    newQuery = newQuery + query.query + query.type + ",";
                                }
                                newQuery += item + "1";
                                <div class="col-md-12" style="padding:0">
                                    <h5 style="margin:0; padding:0"><i>@Html.ActionLink(@item, "Filter", "Store", new { queries = newQuery, sortS = Model.SortName, save = true, itemCount = Model.ItemsPerPage }, new { @class = "filter" })</i></h5>
                                </div>
                                inc++;
                                if(inc == 5)
                                {
                                    break;
                                }
                            }
                        }
                        <div class="col-md-12" style="padding:0">
                            <a class="filter expand" href="#" id="more" >more</a>
                        </div>
                    </div>
                }
                
            }
            <div class="col-md-12" style="margin-top:20px; padding:0px; background-color:#D2D7D3">
                <h5 style="padding-left:20px; margin-top: 10px; margin-bottom: 10px"><b>Author</b></h5>
            </div>        
            @{
                HashSet<String> categoriesA = new HashSet<string>();
                foreach (var item in Model.FilterItems)
                {
                    bool found = false;
                    foreach (var query in Model.Queries)
                    {
                        if (query.query == item.Author.AuthorName)
                        {
                            found = true;
                        }
                    }

                    if (!found)
                    {
                        categoriesA.Add(item.Author.AuthorName);
                    }

                }

                if (categoriesA.Count == 0)
                {
                    <div class="col-md-12 break">
                        <p>______________________</p>
                    </div>
                }
                if (categoriesA.Count <= 5)
                {
                    foreach (var item in categoriesA)
                    {
                        String newQuery = "";
                        foreach (var query in Model.Queries)
                        {
                            newQuery = newQuery + query.query + query.type + ",";
                        }
                        newQuery += item + "0";
                        <div class="col-md-12" style="padding:0">
                            <h5 style="margin:0; padding:0"><i>@Html.ActionLink(@item, "Filter", "Store", new { queries = newQuery, sortS = Model.SortName, save = true, itemCount = Model.ItemsPerPage }, new { @class = "filter"})</i></h5>
                        </div>
                    }
                }
                else
                {
                    <div id="completeA" class="col-md-12" style="margin:0; padding:0; display:none">
                        @foreach (var item in categoriesA)
                        {
                            String newQuery = "";
                            foreach (var query in Model.Queries)
                            {
                                newQuery = newQuery + query.query + query.type + ",";
                            }
                            newQuery += item + "0";
                            <div class="col-md-12" style="padding:0">
                                <h5 style="margin:0; padding:0"><i>@Html.ActionLink(@item, "Filter", "Store", new { queries = newQuery, sortS = Model.SortName, save = true, itemCount = Model.ItemsPerPage }, new { @class = "filter"})</i></h5>
                            </div>
                        }
                        <div class="col-md-12" style="padding:0">
                            <a class="filter expand" href="#" id="lessA">less</a>
                        </div>
                    </div>
                    <div id="partialA" class="col-md-12" style="margin:0; padding:0; display:contents">
                        @{
                            int inc = 0;
                            foreach (var item in categoriesA)
                            {
                                String newQuery = "";
                                foreach (var query in Model.Queries)
                                {
                                    newQuery = newQuery + query.query + query.type + ",";
                                }
                                newQuery += item + "0";
                                <div class="col-md-12" style="padding:0">
                                    <h5 style="margin:0; padding:0"><i>@Html.ActionLink(@item, "Filter", "Store", new { queries = newQuery, sortS = Model.SortName, save = true, itemCount = Model.ItemsPerPage }, new { @class = "filter" })</i></h5>
                                </div>
                                inc++;
                                if (inc == 5)
                                {
                                    break;
                                }
                            }
                        }


                        <div class="col-md-12" style="padding:0">
                            <a class="filter expand" href="#" id="moreA">more</a>
                        </div>
                    </div>
                            }
            }

        </div>
        <div class="col-md-2"></div>
    </div>

    <div class="col-md-7">
        <h2>@ViewBag.Message</h2>

        <div style="margin:0; padding:0">
            @{ 
                int start = Model.ItemsPerPage * (Model.Pager.CurrentPage - 1) + 1;
                int end  = (Model.ItemsPerPage * (Model.Pager.CurrentPage)) <= Model.FilterItems.Count() ? (Model.ItemsPerPage * (Model.Pager.CurrentPage)) : Model.FilterItems.Count();
            }
            @if(Model.FilterItems.Count() > 1)
            {
                <p>
                    Displaying @start - @end of @Model.FilterItems.Count() results
                </p>
            }
            else
            {
                <p>
                    @Model.FilterItems.Count() result
                </p>
            }
            @if (Model.FilterItems.Count() > 5)
            {
                <ul class="pagination" style="float: left" id="exp">
                    <li>
                        <a id="expand" href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">Results @Model.ItemsPerPage <i class="fa fa-caret-right" aria-hidden="true"></i></a>
                    </li>                
                </ul>
            }
            <ul class="pagination" style="display:none; float: left" id="pageitems">    
                @if (Model.FilterItems.Count() > 5)
                {
                    <li>
                        <a id="shrink" href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">Results @Model.ItemsPerPage <i class="fa fa-caret-left" aria-hidden="true"></i></a>
                    </li>
                    <li>
                        <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, itemCount = 5})'>5</a>
                    </li>
                    <li>
                        <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, itemCount = 10})'>10</a>
                    </li>
                }
                @if (Model.FilterItems.Count() > 10)
                {
                    <li>
                        <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, itemCount = 25})'>25</a>
                    </li>
                }
                @if (Model.FilterItems.Count() > 25)
                {
                    <li>
                        <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, itemCount = 50})'>50</a>
                    </li>
                }
                @if (Model.FilterItems.Count() > 50)
                {
                    <li>
                        <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, itemCount = 100})'>100</a>
                    </li>
                }
            </ul>

            @if (Model.Pager.EndPage > 1)
            {
                
                <ul class="pagination" style="float:right">
                    @if (Model.Pager.CurrentPage > 1)
                    {
                        <li>
                            <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, itemCount = Model.ItemsPerPage})'>First</a>
                        </li>
                        <li>
                            <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = (Model.Pager.CurrentPage - 1), itemCount = Model.ItemsPerPage})'>Previous</a>
                        </li>
                    }
                    @if (Model.Pager.EndPage < 6)
                    {
                        for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                        {
                            <li class="@(page == Model.Pager.CurrentPage ? "active" : "")">
                                <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = page, itemCount = Model.ItemsPerPage })'>@page</a>
                            </li>
                        }
                    }
                    else
                    {
                        <li class="@(Model.Pager.CurrentPage == 1 ? "active" : "")">
                            <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = 1, itemCount = Model.ItemsPerPage })'>1</a>
                        </li>
                        if (Model.Pager.CurrentPage - 1 > 2)
                        {
                            <li>
                                <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = (Model.Pager.CurrentPage - 2), itemCount = Model.ItemsPerPage})'>...</a>
                            </li>
                        }
                        else
                        {
                            <li class="@(Model.Pager.CurrentPage == 2 ? "active" : "")">
                                <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = 2, itemCount = Model.ItemsPerPage })'>2</a>
                            </li>
                            <li class="@(Model.Pager.CurrentPage == 3 ? "active" : "")">
                                <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = 3, itemCount = Model.ItemsPerPage })'>3</a>
                            </li>
                            <li class="@(Model.Pager.CurrentPage == 4 ? "active" : "")">
                                <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = 4, itemCount = Model.ItemsPerPage })'>4</a>
                            </li>                            
                        }
                        if (Model.Pager.CurrentPage > 3 && Model.Pager.CurrentPage < (Model.Pager.EndPage - 2))
                        {
                            for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                            {
                                if ((Math.Abs(Model.Pager.CurrentPage - page) < 2) && page > 1 && page < Model.Pager.EndPage)
                                {
                                    <li class="@(page == Model.Pager.CurrentPage ? "active" : "")">
                                        <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = page, itemCount = Model.ItemsPerPage })'>@page</a>
                                    </li>
                                }
                            }                            
                        }
                        if (Model.Pager.EndPage - Model.Pager.CurrentPage > 2)
                        {
                            <li>
                                <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = (Model.Pager.CurrentPage + 2), itemCount = Model.ItemsPerPage})'>...</a>
                            </li>
                        }
                        else
                        {
                            <li class="@(Model.Pager.CurrentPage == Model.Pager.EndPage - 3 ? "active" : "")">
                                <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = Model.Pager.EndPage - 3, itemCount = Model.ItemsPerPage })'>@(Model.Pager.EndPage - 3)</a>
                            </li>
                            <li class="@(Model.Pager.CurrentPage == Model.Pager.EndPage - 2 ? "active" : "")">
                                <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = Model.Pager.EndPage - 2, itemCount = Model.ItemsPerPage })'>@(Model.Pager.EndPage - 2)</a>
                            </li>
                            <li class="@(Model.Pager.CurrentPage == Model.Pager.EndPage -1 ? "active" : "")">
                                <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = Model.Pager.EndPage - 1, itemCount = Model.ItemsPerPage })'>@(Model.Pager.EndPage - 1)</a>
                            </li>
                        }
                        <li class="@(Model.Pager.CurrentPage == Model.Pager.EndPage ? "active" : "")">
                            <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = Model.Pager.EndPage, itemCount = Model.ItemsPerPage })'>@Model.Pager.EndPage</a>
                        </li>
                    }

                    @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                    {
                        <li>
                            <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = (Model.Pager.CurrentPage + 1), itemCount = Model.ItemsPerPage})'>Next</a>
                        </li>
                        <li>
                            <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = (Model.Pager.TotalPages), itemCount = Model.ItemsPerPage})'>Last</a>
                        </li>
                    }
                </ul>
            }
        </div>    

            <div align="right">
                <table class="table">
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <td style="vertical-align:middle">
                                @Html.ImageActionLink(" ", "ProductDetails", "Store", new { id = item.BookID }, null, item.CoverUrl)
                            </td>
                            <td>
                                <h3>@item.BookName</h3>
                                <h4>by @Html.ActionLink(item.Author.AuthorName, "Filter", "Store", new { queries = item.Author.AuthorName + "0", sortS = Model.SortName, save = true, itemCount = Model.ItemsPerPage }, null)</h4>
                                <p>@item.Synopsis</p>
                                <h4>Price: $@item.Price</h4>
                                <div style="margin-top: 3px;">
                                    @for (var i = 1; i <= 5; i++)
                                    {
                                        if (i <= item.AvgRating)
                                        {
                                            <i style="color:darkorange" class="fa fa-star fa-2x"></i>
                                            if ((item.AvgRating - i) > 0 && (item.AvgRating - i) < 1)
                                            {
                                                <i style="color:darkorange" class="fa fa-star-half-full fa-2x"></i>
                                            }
                                        }

                                        if ((i > Math.Ceiling(item.AvgRating)) && (i <= 5))
                                        {
                                            <i style="color:darkorange" class="fa fa-star-o fa-2x"></i>
                                        }
                                    }
                                </div>

                            </td>
                        </tr>
                    }
                </table>
            </div>

            @if (Model.Pager.EndPage > 1)
            {
                
                <ul class="pagination" style="float:right">
                    @if (Model.Pager.CurrentPage > 1)
                    {
                        <li>
                            <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, itemCount = Model.ItemsPerPage})'>First</a>
                        </li>
                        <li>
                            <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = (Model.Pager.CurrentPage - 1), itemCount = Model.ItemsPerPage})'>Previous</a>
                        </li>
                    }
                    @if (Model.Pager.EndPage < 6)
                    {
                        for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                        {
                            <li class="@(page == Model.Pager.CurrentPage ? "active" : "")">
                                <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = page, itemCount = Model.ItemsPerPage })'>@page</a>
                            </li>
                        }
                    }
                    else
                    {
                        <li class="@(Model.Pager.CurrentPage == 1 ? "active" : "")">
                            <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = 1, itemCount = Model.ItemsPerPage })'>1</a>
                        </li>
                        if (Model.Pager.CurrentPage - 1 > 2)
                        {
                            <li>
                                <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = (Model.Pager.CurrentPage - 2), itemCount = Model.ItemsPerPage})'>...</a>
                            </li>
                        }
                        else
                        {
                            <li class="@(Model.Pager.CurrentPage == 2 ? "active" : "")">
                                <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = 2, itemCount = Model.ItemsPerPage })'>2</a>
                            </li>
                            <li class="@(Model.Pager.CurrentPage == 3 ? "active" : "")">
                                <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = 3, itemCount = Model.ItemsPerPage })'>3</a>
                            </li>
                            <li class="@(Model.Pager.CurrentPage == 4 ? "active" : "")">
                                <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = 4, itemCount = Model.ItemsPerPage })'>4</a>
                            </li>
                        }
                        if (Model.Pager.CurrentPage > 3 && Model.Pager.CurrentPage < (Model.Pager.EndPage - 2))
                        {
                            for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                            {
                                if ((Math.Abs(Model.Pager.CurrentPage - page) < 2) && page > 1 && page < Model.Pager.EndPage)
                                {
                                    <li class="@(page == Model.Pager.CurrentPage ? "active" : "")">
                                        <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = page, itemCount = Model.ItemsPerPage })'>@page</a>
                                    </li>
                                }
                            }
                        }
                        if (Model.Pager.EndPage - Model.Pager.CurrentPage > 2)
                        {
                            <li>
                                <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = (Model.Pager.CurrentPage + 2), itemCount = Model.ItemsPerPage})'>...</a>
                            </li>
                        }
                        else
                        {
                            <li class="@(Model.Pager.CurrentPage == Model.Pager.EndPage - 3 ? "active" : "")">
                                <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = Model.Pager.EndPage - 3, itemCount = Model.ItemsPerPage })'>@(Model.Pager.EndPage - 3)</a>
                            </li>
                            <li class="@(Model.Pager.CurrentPage == Model.Pager.EndPage - 2 ? "active" : "")">
                                <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = Model.Pager.EndPage - 2, itemCount = Model.ItemsPerPage })'>@(Model.Pager.EndPage - 2)</a>
                            </li>
                            <li class="@(Model.Pager.CurrentPage == Model.Pager.EndPage -1 ? "active" : "")">
                                <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = Model.Pager.EndPage - 1, itemCount = Model.ItemsPerPage })'>@(Model.Pager.EndPage - 1)</a>
                            </li>
                        }
                        <li class="@(Model.Pager.CurrentPage == Model.Pager.EndPage ? "active" : "")">
                            <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = Model.Pager.EndPage, itemCount = Model.ItemsPerPage })'>@Model.Pager.EndPage</a>
                        </li>
                    }

                    @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                    {
                        <li>
                            <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = (Model.Pager.CurrentPage + 1), itemCount = Model.ItemsPerPage})'>Next</a>
                        </li>
                        <li>
                            <a href='@Url.Action("Filter", "Store", new { queries = qString, sortS = Model.SortName, save = true, page = (Model.Pager.TotalPages), itemCount = Model.ItemsPerPage})'>Last</a>
                        </li>
                    }
                </ul>
            }

</div>    

</div>
<script>
    @{
        
        String sort = Model.SortName;
    }

    var id = '@sort';
    document.getElementById(id).selected = 'selected';

</script>

<script>
    $('#more').click(function (e) {
        $('#complete').css({
            'display': 'unset'
        });
        $('#partial').css({
            'display': 'none'
        });
        e.preventDefault();
    });

    $('#less').click(function (e) {
        $('#complete').css({
            'display': 'none'
        });
        $('#partial').css({
            'display': 'unset'
        });
        e.preventDefault();
    });

    $('#moreA').click(function (e) {
        $('#completeA').css({
            'display': 'unset'
        });
        $('#partialA').css({
            'display': 'none'
        });
        e.preventDefault();
    });

    $('#lessA').click(function (e) {
        $('#completeA').css({
            'display': 'none'
        });
        $('#partialA').css({
            'display': 'unset'
        });
        e.preventDefault();
    });

    $('#expand').click(function (e) {       
        $('#pageitems').css({
            'display': 'unset'
        });
        $('#exp').css({
            'display': 'none'
        });
        e.preventDefault();
    });

    $('#shrink').click(function (e) {
        $('#pageitems').css({
            'display': 'none'
        });
        $('#exp').css({
            'display': 'unset'
        });        
        e.preventDefault();
    });
</script>

